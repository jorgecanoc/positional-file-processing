<?xml version="1.0" encoding="UTF-8"?>
<!--

     Copyright 2005-2016 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.5.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="              http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd              http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <ext:property-placeholder evaluator="fabric8" id="fabric8PropertyPlaceholder"/>
    <bean class="io.fabric8.quickstarts.camelamq.OrderGenerator" id="orderGenerator"/>
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="activemq">
        <property name="brokerURL" value="tcp://${env+service:ACTIVEMQ_SERVICE_NAME}"/>
        <property name="userName" value="${env:ACTIVEMQ_USERNAME}"/>
        <property name="password" value="${env:ACTIVEMQ_PASSWORD}"/>
    </bean>
    <!-- this is the JDBC data source which uses a MySQL database -->
    <bean class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" id="dataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://${env+service:MYSQL_SERVICE_NAME}/${env:MYSQL_SERVICE_DATABASE}"/>
        <property name="username" value="${env:MYSQL_SERVICE_USERNAME}"/>
        <property name="password" value="${env:MYSQL_SERVICE_PASSWORD}"/>
    </bean>
    <!-- configure the Camel SQL component to use the JDBC data source -->
    <bean class="org.apache.camel.component.sql.SqlComponent" id="sql">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean class="com.isban.SplitFile" id="splitFile"/>
    <bean class="com.isban.split.DivideMethod" id="divisor"/>
    <bean class="com.isban.split.Aggregation" id="aggregationStrategy"/>
    <bean class="com.isban.LineProcessor" id="lineProcessor"/>
    <camelContext id="jms-example-context" xmlns="http://camel.apache.org/schema/blueprint">
        <!-- use Camel property placeholder loaded from the given file -->
        <propertyPlaceholder id="placeholder" location="classpath:sql.properties"/>
        <!-- a route to generate a random order every 5th second -->
        <route id="generate-order">
            <from id="route-timer" uri="timer:order?period=5000"/>
            <bean id="route-generate-order" method="generateOrder" ref="orderGenerator"/>
            <setHeader headerName="Exchange.FILE_NAME" id="route-header-file-name">
                <method method="generateFileName" ref="orderGenerator"/>
            </setHeader>
            <to id="route-to-jms-input" uri="file:work/jms/input"/>
        </route>
        <route id="file-to-jms-route">
            <from id="route-from-jms-input" uri="file:work/jms/input"/>
            <log id="route-log-order" message="Receiving order ${file:name}"/>
            <to id="route-to-incoming-orders" uri="activemq:incomingOrders"/>
        </route>
        <route id="read-csv-file">
            <from id="_from4" uri="file:input/MAT"/>
            <log id="_log4" message="File Name: ${file:name}"/>
            <setHeader headerName="FileName" id="_setHeader1">
                <simple>${file:name}</simple>
            </setHeader>
            <to id="_to10" uri="bean:splitFile"/>
            <split id="_split2" parallelProcessing="false" strategyRef="aggregationStrategy">
                <method bean="divisor" method="divide"/>
                <to id="_to11" uri="bean:lineProcessor"/>
                <log message="${body}"/>
            </split>
        </route>
        <route id="jms-cbr-route" streamCache="true">
            <from id="route-from-incoming-orders" uri="activemq:incomingOrders"/>
            <choice id="route-choice-country">
                <when id="route-when-uk">
                    <xpath>/order/customer/country = 'UK'</xpath>
                    <log id="route-log-uk" message="Sending order ${file:name} to the UK"/>
                    <to id="route-to-file-uk" uri="file:work/jms/output/uk"/>
                </when>
                <when id="route-when-us">
                    <xpath>/order/customer/country = 'US'</xpath>
                    <log id="route-log-us" message="Sending order ${file:name} to the US"/>
                    <to id="route-to-file-us" uri="file:work/jms/output/us"/>
                </when>
                <otherwise id="route-when-other-country">
                    <log id="route-log-other" message="Sending order ${file:name} to another country"/>
                    <to id="route-to-file-other" uri="file:work/jms/output/others"/>
                </otherwise>
            </choice>
            <log id="route-final-log" message="Done processing ${file:name}"/>
        </route>
    </camelContext>
</blueprint>
